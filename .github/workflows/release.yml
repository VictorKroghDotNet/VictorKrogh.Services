name: Build and publish

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "v[0-9]+.[0-9]+.[0-9]+.[0-9]+"

env: 
  configuration: Release
  output_path: "output"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main

    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.1xx

    - name: Build
      run: dotnet build --configuration ${{ env.configuration }} /p:Version=${VERSION}

    - name: Pack "VictorKrogh.Services.Abstractions"
      run: dotnet pack "VictorKrogh.Services.Abstractions.csproj" --configuration ${{ env.configuration }} --output "${{ github.workspace}}/${{ env.output_path }}" /p:Version=${VERSION}
      working-directory: "VictorKrogh.Services.Abstractions"

    - name: Pack "VictorKrogh.Services"
      run: dotnet pack "VictorKrogh.Services.csproj" --configuration ${{ env.configuration }} --output "${{ github.workspace}}/${{ env.output_path }}" /p:Version=${VERSION}
      working-directory: "VictorKrogh.Services"
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Artifacts
        path: "output/*.nupkg"


  publish-nuget:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download NuGet Package Artifact
      uses: actions/download-artifact@v4
      with:
        name: Artifacts
        path: artifact

    - name: Push
      run: dotnet nuget push "artifact/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${NUGET_TOKEN} --skip-duplicate
      env:
        NUGET_TOKEN: ${{ secrets.NUGET_API_KEY }}
            
